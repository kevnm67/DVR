os: osx
osx_image: xcode11.4
xcode_project: DVR.xcodeproj
rvm: 2.7.1

cache:
  - bundler

env:
  global:
    - PROJECT="DVR.xcodeproj"
    - SCHEME="DVR-iOS"
    - IOS_SDK=iphonesimulator13.4
    - TVOS_SDK=appletvsimulator13.4
    - OSX_SDK=macosx10.15
    - CC_TEST_REPORTER_ID="6ea96910015510f3bc98fe2dd6a53a43891c6eea3cbaadfeeab6279aae735826"

jobs:
  include:
    - &test
      stage: unit tests
      name: iOS 12.2
      env: DESTINATION="OS=12.2,name=iPhone X" SDK="$IOS_SDK" SCHEME="DVR-iOS"
      before_install:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
      script:
        - set -o pipefail
        - xcodebuild -version -sdk
        - >
           xcodebuild clean test -project "$PROJECT" \
                                 -scheme "$SCHEME" \
                                 -sdk "$SDK" \
                                 -destination "$DESTINATION" \
                                 -enableCodeCoverage YES \
                                 -configuration Debug \
                                 ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO | bundle exec xcpretty -c;
      after_success:
        - slather coverage -s --scheme "$SCHEME" "$PROJECT"
        - "./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT"

    - <<: *test
      name: iOS 13.0
      env: DESTINATION="OS=13.0,name=iPhone 11" SDK="$IOS_SDK"

    - <<: *test
      name: macOS
      env: DESTINATION="arch=x86_64" SDK="$OSX_SDK" SCHEME="DVR-macOS"

    - <<: *test
      name: tvOS 12.2
      env: DESTINATION="OS=12.2,name=Apple TV 4K" SDK="$TVOS_SDK" SCHEME="DVR-tvOS"
      script:
        - swift build

    - <<: *test
      name: tvOS 13.0
      env: DESTINATION="OS=13.0,name=Apple TV" SDK="$TVOS_SDK" SCHEME="DVR-tvOS"

    - stage: lint
      name: pod lint
      script: bundle exec pod lib lint

    - stage: carthage
      name: carthage
      os: osx
      script: carthage build --no-skip-current --configuration Release

stages:
  - unit tests
  - lint
  - carthage
